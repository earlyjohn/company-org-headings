#+TITLE:
#+OPTIONS: toc:nil author:nil date:nil

* company-org-headings

This backend for ~company~ provides completion for Org-mode headings of org files in a specified directory. The package is directed towards Org-mode users that keep their notes in multiple files and try to interconnect them with extensive linking. The idea behind this is making it as easy as possible to link new notes to the concurrent knowledge base in the process of writing them. This may be of great use when trying to create a knowledge base system similar to Niklas Luhmann's Zettelkasten that evolves to something like a "second brain" only by linking the bits of information together. Certainly there may be other ways to use this library.

[[http://mutbuerger.github.io/images/company-org-headings.gif]]

** Installation
#+BEGIN_SRC sh :results output
git clone git@github.com:mutbuerger/company-org-headings.git
#+END_SRC

Since this backend is Org-mode specific, using the ~org-mode-hook~ makes sense:

#+BEGIN_SRC elisp :results value
(add-hook 'org-mode-hook
	  (lambda () (set (make-local-variable 'company-backends)
		     '((company-org-headings)))))
#+END_SRC
** Completion
~company-org-headings~ provides completion using ~string-match-p~. A real fuzzy matching is not planned for this ~company-backend~.
** Stop Words
To improve the performance of candidates retrieval and the meaningfulness of candidates, ~company-org-headings~ removes stop words (most common words in a language) from the candidates. You may extend the ~company-org-headings/stopwords~ to your needs.
** Specify the Directory
Specify the directory to retrieve the Org-mode headings from in ~company-org-headings/search-directory~. Setting ~company-org-headings/restricted-to-directory~ to ~t~ will restrict the ~company-backend~ to the given directory. This makes sense if you only want the completion in a directory dedicated to notes files rather than in all Org-mode buffers.
** Show the Context of Headings
Short headings like "Summary" tend to omit contextual information, the heading text and the filename alone may not be satisfactory. A non-nil ~company-org-headings/show-headings-context~ will reveal the higher level heading to show the context of the candidate at point in the minibuffer.
** Case-Sensivity
Set ~company-org-headings/case-sensitive~ to nil to allow case-insensitive matching of completion candidates.
** What's Missing?
As of now there is only one option to extend the ~alist~ to retrieve the completion candidates from: Rebuilding it as a whole (in an ~org-insert-heading-hook~ for example).
